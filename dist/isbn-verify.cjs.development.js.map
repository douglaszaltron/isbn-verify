{"version":3,"file":"isbn-verify.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["interface isOption {\n\tcheck_digit?: boolean; // Verify format including check digit\n}\n\n/**\n * ISBN Verify\n */\nexport default class {\n\t#isbnNoHyphens: string; // ハイフンなしの ISBN\n\t#isbn13 = false; // 現行規格（13桁）の ISBN か\n\t#isbn10 = false; // 旧規格（10桁）の ISBN か\n\n\t/**\n\t * @param {string} isbn - ISBN value to check\n\t * @param {boolean} strict - Strict mode. If `true`, syntax without hyphens is an error. If not specified, it defaults to `false`\n\t */\n\tconstructor(isbn: string, strict = false) {\n\t\tconst isbnNoHyphens = isbn.replace(/-/g, '');\n\t\tthis.#isbnNoHyphens = isbnNoHyphens;\n\n\t\tif (strict) {\n\t\t\tconst length = isbn.length;\n\n\t\t\tif (length === 17 && /^(978|979)-\\d{1,5}-\\d{1,7}-\\d{1,7}-\\d$/.test(isbn)) {\n\t\t\t\tthis.#isbn13 = true;\n\t\t\t} else if (length === 13 && /^\\d{1,5}-\\d{1,7}-\\d{1,7}-[\\dX]$/.test(isbn)) {\n\t\t\t\tthis.#isbn10 = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isbn.includes('--')) {\n\t\t\t\tif (/^(978|979)\\d{10}$/.test(isbnNoHyphens)) {\n\t\t\t\t\tif (/^\\d[\\d-]{11,15}\\d$/.test(isbn)) {\n\t\t\t\t\t\tthis.#isbn13 = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (/^\\d{9}[\\dX]$/.test(isbnNoHyphens)) {\n\t\t\t\t\tif (/^\\d[\\d-]{8,11}[\\dX]$/.test(isbn)) {\n\t\t\t\t\t\tthis.#isbn10 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Alias of `verifyCheckDigit()`\n\t *\n\t * @returns {boolean} `true` if both format and check digit are correct\n\t */\n\tisValid(): boolean {\n\t\treturn this.verifyCheckDigit();\n\t}\n\n\t/**\n\t * Whether it is a 13-digit ISBN\n\t *\n\t * @param {isOption} options - Specifies characteristics about the check item.\n\t *\n\t * @returns {boolean} `true` for current standard (13 digit) ISBN\n\t */\n\tisIsbn13(options?: isOption): boolean {\n\t\tif (options !== undefined && options.check_digit) {\n\t\t\treturn this.#isbn13 && this.verifyCheckDigit();\n\t\t}\n\n\t\treturn this.#isbn13;\n\t}\n\n\t/**\n\t * Whether it is a 10-digit ISBN\n\t *\n\t * @param {isOption} options - Specifies characteristics about the check item.\n\t *\n\t * @returns {boolean} `true` for old standard (10 digit) ISBN\n\t */\n\tisIsbn10(options?: isOption): boolean {\n\t\tif (options !== undefined && options.check_digit) {\n\t\t\treturn this.#isbn10 && this.verifyCheckDigit();\n\t\t}\n\n\t\treturn this.#isbn10;\n\t}\n\n\t/**\n\t * Verify format (do not verify check digit)\n\t *\n\t * @returns {boolean} `true` if the format is correct\n\t */\n\tverifyFormat(): boolean {\n\t\treturn this.#isbn13 || this.#isbn10;\n\t}\n\n\t/**\n\t * Verify format including check digit (not necessarily applicable publication)\n\t *\n\t * @returns {boolean} `true` if both format and check digit are correct\n\t */\n\tverifyCheckDigit(): boolean {\n\t\tif (this.#isbn13) {\n\t\t\tconst isbnNoHyphens = this.#isbnNoHyphens;\n\t\t\treturn isbnNoHyphens.substring(12) === this._getCheckDigit13(isbnNoHyphens);\n\t\t} else if (this.#isbn10) {\n\t\t\tconst isbnNoHyphens = this.#isbnNoHyphens;\n\t\t\treturn isbnNoHyphens.substring(9) === this._getCheckDigit10(isbnNoHyphens);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * ISBN-13 のチェックデジットを取得する\n\t *\n\t * @param {string} isbnNoHyphens - ハイフンなしの ISBN\n\t *\n\t * @returns {string} チェックデジット\n\t */\n\tprivate _getCheckDigit13(isbnNoHyphens: string): string {\n\t\tconst checkDigit = String(\n\t\t\t10 -\n\t\t\t\t((Number(isbnNoHyphens.substring(0, 1)) +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(1, 2)) * 3 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(2, 3)) +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(3, 4)) * 3 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(4, 5)) +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(5, 6)) * 3 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(6, 7)) +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(7, 8)) * 3 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(8, 9)) +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(9, 10)) * 3 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(10, 11)) +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(11, 12)) * 3) %\n\t\t\t\t\t10)\n\t\t);\n\n\t\tswitch (checkDigit) {\n\t\t\tcase '10':\n\t\t\t\treturn '0';\n\t\t}\n\n\t\treturn checkDigit;\n\t}\n\n\t/**\n\t * ISBN-10 のチェックデジットを取得する\n\t *\n\t * @param {string} isbnNoHyphens - ハイフンなしの ISBN\n\t *\n\t * @returns {string} チェックデジット\n\t */\n\tprivate _getCheckDigit10(isbnNoHyphens: string): string {\n\t\tconst checkDigit = String(\n\t\t\t11 -\n\t\t\t\t((Number(isbnNoHyphens.substring(0, 1)) * 10 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(1, 2)) * 9 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(2, 3)) * 8 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(3, 4)) * 7 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(4, 5)) * 6 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(5, 6)) * 5 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(6, 7)) * 4 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(7, 8)) * 3 +\n\t\t\t\t\tNumber(isbnNoHyphens.substring(8, 9)) * 2) %\n\t\t\t\t\t11)\n\t\t);\n\n\t\tswitch (checkDigit) {\n\t\t\tcase '10':\n\t\t\t\treturn 'X';\n\t\t\tcase '11':\n\t\t\t\treturn '0';\n\t\t}\n\n\t\treturn checkDigit;\n\t}\n}\n"],"names":["isbn","strict","isbnNoHyphens","replace","length","test","includes","isValid","verifyCheckDigit","isIsbn13","options","undefined","check_digit","isIsbn10","verifyFormat","substring","_getCheckDigit13","_getCheckDigit10","checkDigit","String","Number"],"mappings":"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"}